/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * NodeNetworkStateStatus is the status of the NodeNetworkState of a specific node
 * @export
 * @interface V1alpha1NodeNetworkStateStatus
 */
export interface V1alpha1NodeNetworkStateStatus {
    /**
     * 
     * @type {any}
     * @memberof V1alpha1NodeNetworkStateStatus
     */
    conditions?: any | null;
    /**
     * State contains the namestatectl yaml [1] as string instead of golang struct so we don't need to be in sync with the schema. 
     *  [1] https://github.com/nmstate/nmstate/blob/base/libnmstate/schemas/operational-state.yaml
     * @type {any}
     * @memberof V1alpha1NodeNetworkStateStatus
     */
    currentState?: any | null;
    /**
     * 
     * @type {any}
     * @memberof V1alpha1NodeNetworkStateStatus
     */
    handlerNetworkManagerVersion?: any | null;
    /**
     * 
     * @type {any}
     * @memberof V1alpha1NodeNetworkStateStatus
     */
    handlerNmstateVersion?: any | null;
    /**
     * 
     * @type {any}
     * @memberof V1alpha1NodeNetworkStateStatus
     */
    hostNetworkManagerVersion?: any | null;
    /**
     * 
     * @type {any}
     * @memberof V1alpha1NodeNetworkStateStatus
     */
    lastSuccessfulUpdateTime?: any | null;
}

/**
 * Check if a given object implements the V1alpha1NodeNetworkStateStatus interface.
 */
export function instanceOfV1alpha1NodeNetworkStateStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1alpha1NodeNetworkStateStatusFromJSON(json: any): V1alpha1NodeNetworkStateStatus {
    return V1alpha1NodeNetworkStateStatusFromJSONTyped(json, false);
}

export function V1alpha1NodeNetworkStateStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1NodeNetworkStateStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : json['conditions'],
        'currentState': !exists(json, 'currentState') ? undefined : json['currentState'],
        'handlerNetworkManagerVersion': !exists(json, 'handlerNetworkManagerVersion') ? undefined : json['handlerNetworkManagerVersion'],
        'handlerNmstateVersion': !exists(json, 'handlerNmstateVersion') ? undefined : json['handlerNmstateVersion'],
        'hostNetworkManagerVersion': !exists(json, 'hostNetworkManagerVersion') ? undefined : json['hostNetworkManagerVersion'],
        'lastSuccessfulUpdateTime': !exists(json, 'lastSuccessfulUpdateTime') ? undefined : json['lastSuccessfulUpdateTime'],
    };
}

export function V1alpha1NodeNetworkStateStatusToJSON(value?: V1alpha1NodeNetworkStateStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': value.conditions,
        'currentState': value.currentState,
        'handlerNetworkManagerVersion': value.handlerNetworkManagerVersion,
        'handlerNmstateVersion': value.handlerNmstateVersion,
        'hostNetworkManagerVersion': value.hostNetworkManagerVersion,
        'lastSuccessfulUpdateTime': value.lastSuccessfulUpdateTime,
    };
}

