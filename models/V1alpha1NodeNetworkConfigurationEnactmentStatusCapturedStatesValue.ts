/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfo } from './V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfo';
import {
    V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfoFromJSON,
    V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfoFromJSONTyped,
    V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfoToJSON,
} from './V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfo';

/**
 * 
 * @export
 * @interface V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue
 */
export interface V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue {
    /**
     * 
     * @type {V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfo}
     * @memberof V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue
     */
    metaInfo?: V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfo;
    /**
     * State contains the namestatectl yaml [1] as string instead of golang struct so we don't need to be in sync with the schema. 
     *  [1] https://github.com/nmstate/nmstate/blob/base/libnmstate/schemas/operational-state.yaml
     * @type {any}
     * @memberof V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue
     */
    state?: any | null;
}

/**
 * Check if a given object implements the V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue interface.
 */
export function instanceOfV1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueFromJSON(json: any): V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue {
    return V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueFromJSONTyped(json, false);
}

export function V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metaInfo': !exists(json, 'metaInfo') ? undefined : V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfoFromJSON(json['metaInfo']),
        'state': !exists(json, 'state') ? undefined : json['state'],
    };
}

export function V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueToJSON(value?: V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metaInfo': V1alpha1NodeNetworkConfigurationEnactmentStatusCapturedStatesValueMetaInfoToJSON(value.metaInfo),
        'state': value.state,
    };
}

